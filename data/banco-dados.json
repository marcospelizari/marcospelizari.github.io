{
    "title": "Banco de Dados",
    "description": "Conceitos de bancos de dados para armazenar e gerenciar dados, com foco em relacionais e introdução ao NoSQL.",
    "subsections": [
        {
            "subtitle": "Conceitos de Bancos Relacionais",
            "description": "Como funcionam bancos relacionais.",
            "examples": [
                {
                    "title": "Explicação",
                    "explanation": "Bancos relacionais organizam dados em tabelas com chaves primárias e estrangeiras, gerenciados por um RDBMS (Relational Database Management System) como MySQL usando SQL (Structured Query Language).",
                    "code": "CREATE TABLE usuarios (\n    id INT PRIMARY KEY,\n    nome VARCHAR(50)\n);"
                }
            ]
        },
        {
            "subtitle": "Modelagem e Normalização",
            "description": "Como estruturar dados eficientemente.",
            "examples": [
                {
                    "title": "Explicação",
                    "explanation": "Modelagem define tabelas com colunas e tipos (ex.: INT, VARCHAR). Normalização separa dados em tabelas para evitar redundâncias, usando chaves.",
                    "code": "CREATE TABLE pedidos (\n    id INT PRIMARY KEY,\n    usuario_id INT,\n    FOREIGN KEY (usuario_id) REFERENCES usuarios(id)\n);"
                }
            ]
        },
        {
            "subtitle": "Comandos SQL",
            "description": "Como manipular dados com SQL.",
            "examples": [
                {
                    "title": "Explicação",
                    "explanation": "SQL (Structured Query Language) usa SELECT para buscar, INSERT para adicionar, UPDATE para alterar e DELETE para remover dados. JOIN combina tabelas.",
                    "code": "SELECT u.nome, p.id FROM usuarios u INNER JOIN pedidos p ON u.id = p.usuario_id;\nINSERT INTO usuarios (id, nome) VALUES (1, \"João\");"
                }
            ]
        },
        {
            "subtitle": "Transações e Índices",
            "description": "Como garantir confiabilidade e performance.",
            "examples": [
                {
                    "title": "Explicação",
                    "explanation": "Transações (ACID - Atomicidade, Consistência, Isolamento, Durabilidade) garantem operações completas ou revertidas. Índices aceleram buscas, mas consomem espaço.",
                    "code": "BEGIN TRANSACTION;\nUPDATE conta SET saldo = saldo - 100 WHERE id = 1;\nCOMMIT;\nCREATE INDEX idx_nome ON usuarios(nome);"
                }
            ]
        },
        {
            "subtitle": "SQL vs. NoSQL",
            "description": "Diferenças entre bancos relacionais e não relacionais.",
            "examples": [
                {
                    "title": "Explicação",
                    "explanation": "Bancos SQL (ex.: MySQL) usam tabelas com esquema fixo, ideais para dados estruturados. Bancos NoSQL (Not Only SQL, ex.: MongoDB) são flexíveis para dados não estruturados.",
                    "code": ""
                }
            ]
        },
        {
            "subtitle": "Segurança em SQL",
            "description": "Como proteger contra vulnerabilidades.",
            "examples": [
                {
                    "title": "Explicação",
                    "explanation": "Use PreparedStatement para evitar SQL Injection, passando parâmetros com segurança em vez de concatenar strings.",
                    "code": "PreparedStatement stmt = conn.prepareStatement(\"SELECT * FROM usuarios WHERE nome = ?\");\nstmt.setString(1, nome);\nResultSet rs = stmt.executeQuery();"
                }
            ]
        },
        {
            "subtitle": "Recursos para Prática",
            "description": "Ferramentas para aprender bancos de dados.",
            "examples": [
                {
                    "title": "Explicação",
                    "explanation": "Pratique com SQLZoo (exercícios SQL), DB Fiddle (testes online), MySQL Workbench (gerenciamento) e Mode SQL Tutorial (guias).",
                    "code": ""
                }
            ]
        }
    ]
}