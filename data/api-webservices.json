{
    "title": "APIs (REST e GraphQL)",
    "description": "APIs (Application Programming Interfaces) permitem comunicação entre sistemas, essencial para backend.",
    "subsections": [
        {
            "subtitle": "Fundamentos de APIs",
            "description": "Como APIs conectam sistemas.",
            "examples": [
                {
                    "title": "Explicação",
                    "explanation": "APIs (Application Programming Interfaces) definem regras para troca de dados via HTTP (Hypertext Transfer Protocol), retornando JSON (JavaScript Object Notation). Conectam frontend e backend ou sistemas externos.",
                    "code": "GET /produtos\n[\n    {\"id\": 1, \"nome\": \"Notebook\"}\n]"
                }
            ]
        },
        {
            "subtitle": "REST e GraphQL",
            "description": "Principais tipos de APIs.",
            "examples": [
                {
                    "title": "Explicação",
                    "explanation": "REST (Representational State Transfer) usa endpoints fixos (ex.: /produtos) e métodos HTTP (GET, POST). GraphQL permite ao cliente escolher dados específicos em uma única URL.",
                    "code": "query {\n  produtos {\n    nome\n  }\n}\n// Resposta\n{\"data\": {\"produtos\": [{\"nome\": \"Notebook\"}] }}"
                }
            ]
        },
        {
            "subtitle": "Códigos de Status HTTP",
            "description": "Como interpretar respostas.",
            "examples": [
                {
                    "title": "Explicação",
                    "explanation": "Códigos HTTP indicam o resultado: 2xx (sucesso, ex.: 200 OK), 4xx (erro do cliente, ex.: 404 Not Found), 5xx (erro do servidor). Orientam o cliente sobre a requisição.",
                    "code": "HTTP/1.1 404 Not Found\n{\"error\": \"Produto não encontrado\"}"
                }
            ]
        },
        {
            "subtitle": "Consumo e Teste de APIs",
            "description": "Como interagir e validar APIs.",
            "examples": [
                {
                    "title": "Explicação",
                    "explanation": "Consuma APIs com RestTemplate ou WebClient em Java. Teste com RestAssured ou Postman, verificando status e respostas JSON.",
                    "code": "@Test\nvoid testGetProdutos() {\n    given().when().get(\"/api/produtos\").then().statusCode(200);\n}"
                }
            ]
        },
        {
            "subtitle": "Recursos para Prática",
            "description": "Ferramentas para aprender APIs.",
            "examples": [
                {
                    "title": "Explicação",
                    "explanation": "Use Postman (testes), Swagger (documentação), GraphQL Playground (GraphQL) e REST API Tutorial (guias).",
                    "code": ""
                }
            ]
        }
    ]
}