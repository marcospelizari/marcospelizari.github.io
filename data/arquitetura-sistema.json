{
  "title": "Arquitetura de Sistemas",
  "description": "Conceitos básicos de design de software.",
  "subsections": [
    {
      "subtitle": "O que é Arquitetura de Software?",
      "description": "Definição inicial.",
      "examples": [
        {
          "title": "Explicação",
          "explanation": "Arquitetura de software define como os componentes de um sistema são organizados e como interagem. Ela busca escalabilidade, manutenibilidade e eficiência.",
          "code": "",
          "interview_question": "Explique com suas palavras o que é arquitetura de software."
        }
      ]
    },
    {
      "subtitle": "Arquitetura Monolítica",
      "description": "Modelo tradicional.",
      "examples": [
        {
          "title": "Explicação",
          "explanation": "Em sistemas monolíticos, todos os módulos (front-end, back-end e regras de negócio) ficam em um único projeto. É simples de iniciar, mas difícil de escalar e manter em times grandes.",
          "code": "",
          "interview_question": "Quais as vantagens e desvantagens de uma arquitetura monolítica?"
        }
      ]
    },
    {
      "subtitle": "Arquitetura de Microserviços",
      "description": "Modelo distribuído.",
      "examples": [
        {
          "title": "Explicação",
          "explanation": "Microserviços dividem a aplicação em serviços independentes que se comunicam via APIs. Cada serviço pode ser escalado e implantado separadamente, aumentando flexibilidade.",
          "code": "",
          "interview_question": "Quais as principais vantagens de microserviços em comparação com monólitos?"
        }
      ]
    },
    {
      "subtitle": "Camadas de Arquitetura",
      "description": "Separação de responsabilidades.",
      "examples": [
        {
          "title": "Explicação",
          "explanation": "Uma arquitetura típica tem camadas: apresentação (UI), negócio (regras), persistência (banco de dados). Isso melhora organização e testabilidade.",
          "code": "",
          "interview_question": "Por que separar responsabilidades em camadas ajuda no design de software?"
        }
      ]
    }
  ]
}
    